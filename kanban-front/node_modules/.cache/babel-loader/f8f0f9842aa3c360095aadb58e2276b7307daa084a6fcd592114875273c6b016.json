{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aleks\\\\Desktop\\\\kanbanapp\\\\kanban-front\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport Board from \"./Components/Board/Board\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [boards, setBoards] = useState([]);\n  const [darkTheme, setDarkTheme] = useState(localStorage.getItem(\"kanban-theme\") === \"dark\");\n  const statuses = [\"Очередь\", \"В работе\", \"На проверке\", \"Готово\"];\n\n  // Загрузка\n  const fetchBoardData = () => {\n    axios.get(\"http://localhost:3001/api/board\").then(res => {\n      const tasks = res.data.tasks || [];\n      const grouped = statuses.map((st, i) => ({\n        id: `${i + 1}`,\n        title: st,\n        cards: tasks.filter(t => t.status === st)\n      }));\n      setBoards(grouped);\n    });\n  };\n  useEffect(fetchBoardData, []);\n  useEffect(() => localStorage.setItem(\"kanban-theme\", darkTheme ? \"dark\" : \"light\"), [darkTheme]);\n\n  // Добавление карточки\n  const addCardHandler = (boardId, cardData) => {\n    // cardData уже содержит: title, description, startDate, dueDate, tasks\n    const newCard = {\n      id: `${Date.now()}-${Math.random()}`,\n      ...cardData,\n      status: boards.find(b => b.id === boardId).title,\n      labels: [] // если нужно\n    };\n\n    setBoards(bs => bs.map(b => b.id === boardId ? {\n      ...b,\n      cards: [...b.cards, newCard]\n    } : b));\n    // отправьте на сервер, если нужно:\n    axios.post(\"http://localhost:3001/api/addTask\", {\n      card: newCard\n    });\n  };\n\n  // Остальные хендлеры: updateCard, removeCard, onDragEnd\n  const updateCard = (boardId, cardId, updated) => {\n    setBoards(bs => bs.map(b => b.id === boardId ? {\n      ...b,\n      cards: b.cards.map(c => c.id === cardId ? updated : c)\n    } : b));\n    axios.post(\"http://localhost:3001/api/editTask\", {\n      card: updated\n    });\n  };\n  const removeCard = (boardId, cardId) => {\n    setBoards(bs => bs.map(b => b.id === boardId ? {\n      ...b,\n      cards: b.cards.filter(c => c.id !== cardId)\n    } : b));\n  };\n  const onDragEnd = result => {/* ваш DnD... */};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `app ${darkTheme ? \"dark\" : \"\"}`,\n    children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app_boards\",\n        children: boards.map(board => /*#__PURE__*/_jsxDEV(Board, {\n          board: board,\n          addCard: addCardHandler,\n          updateCard: updateCard,\n          removeCard: removeCard,\n          darkTheme: darkTheme\n        }, board.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"84B7QU5oCtcrEc90y1M2a/mjMeE=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","DragDropContext","Board","jsxDEV","_jsxDEV","App","_s","boards","setBoards","darkTheme","setDarkTheme","localStorage","getItem","statuses","fetchBoardData","get","then","res","tasks","data","grouped","map","st","i","id","title","cards","filter","t","status","setItem","addCardHandler","boardId","cardData","newCard","Date","now","Math","random","find","b","labels","bs","post","card","updateCard","cardId","updated","c","removeCard","onDragEnd","result","className","children","board","addCard","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/aleks/Desktop/kanbanapp/kanban-front/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport Board from \"./Components/Board/Board\";\nimport \"./App.css\";\n\nexport default function App() {\n  const [boards, setBoards] = useState([]);\n  const [darkTheme, setDarkTheme] = useState(localStorage.getItem(\"kanban-theme\")===\"dark\");\n\n  const statuses = [\"Очередь\", \"В работе\", \"На проверке\", \"Готово\"];\n\n  // Загрузка\n  const fetchBoardData = () => {\n    axios.get(\"http://localhost:3001/api/board\")\n      .then(res => {\n        const tasks = res.data.tasks||[];\n        const grouped = statuses.map((st,i)=>({\n          id: `${i+1}`,\n          title: st,\n          cards: tasks.filter(t=>t.status===st),\n        }));\n        setBoards(grouped);\n      });\n  };\n  useEffect(fetchBoardData, []);\n  useEffect(()=>localStorage.setItem(\"kanban-theme\", darkTheme?\"dark\":\"light\"),[darkTheme]);\n\n  // Добавление карточки\n  const addCardHandler = (boardId, cardData) => {\n    // cardData уже содержит: title, description, startDate, dueDate, tasks\n    const newCard = {\n      id: `${Date.now()}-${Math.random()}`,\n      ...cardData,\n      status: boards.find(b=>b.id===boardId).title,\n      labels: [], // если нужно\n    };\n    setBoards(bs =>\n      bs.map(b => b.id===boardId ? { ...b, cards: [...b.cards, newCard] } : b)\n    );\n    // отправьте на сервер, если нужно:\n    axios.post(\"http://localhost:3001/api/addTask\", { card: newCard });\n  };\n\n  // Остальные хендлеры: updateCard, removeCard, onDragEnd\n  const updateCard = (boardId, cardId, updated) => {\n    setBoards(bs=>bs.map(b=>b.id===boardId?{\n      ...b,\n      cards:b.cards.map(c=>c.id===cardId?updated:c)\n    }:b));\n    axios.post(\"http://localhost:3001/api/editTask\", { card: updated });\n  };\n  const removeCard = (boardId, cardId) => {\n    setBoards(bs=>bs.map(b=>b.id===boardId?{\n      ...b,\n      cards:b.cards.filter(c=>c.id!==cardId)\n    }:b));\n  };\n  const onDragEnd = result => { /* ваш DnD... */ };\n\n  return (\n    <div className={`app ${darkTheme?\"dark\":\"\"}`}>\n      {/* навигация, темы, фильтры, поиск */}\n      <DragDropContext onDragEnd={onDragEnd}>\n        <div className=\"app_boards\">\n          {boards.map(board=>(\n            <Board\n              key={board.id}\n              board={board}\n              addCard={addCardHandler}\n              updateCard={updateCard}\n              removeCard={removeCard}\n              darkTheme={darkTheme}\n            />\n          ))}\n        </div>\n      </DragDropContext>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}