{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aleks\\\\Desktop\\\\kanbanapp\\\\kanban-front\\\\src\\\\Components\\\\Board\\\\Board.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Droppable } from \"react-beautiful-dnd\";\nimport Card from \"../Card/Card\";\nimport \"./Board.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Board(props) {\n  _s();\n  const [showAddCardForm, setShowAddCardForm] = useState(false);\n  const [newCardTitle, setNewCardTitle] = useState(\"\");\n  const [newCardDescription, setNewCardDescription] = useState(\"\");\n\n  // Пастельные цвета для заголовков досок (настройте по своему вкусу)\n  const boardHeaderColors = {\n    \"Очередь\": \"#fae9a6\",\n    \"В работе\": \"#c4e2ff\",\n    \"На проверке\": \"#ffd0d0\",\n    \"Готово\": \"#b5f8b8\"\n  };\n\n  // Выбираем цвет для текущей доски\n  const headerColor = boardHeaderColors[props.board.title] || \"#fdfdfd\";\n  const handleAddCard = () => {\n    if (!newCardTitle.trim()) return;\n    props.addCard(props.board.id, {\n      title: newCardTitle.trim(),\n      description: newCardDescription.trim()\n    });\n    setNewCardTitle(\"\");\n    setNewCardDescription(\"\");\n    setShowAddCardForm(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `board ${props.darkTheme ? \"dark\" : \"\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board_header\",\n      style: {\n        backgroundColor: headerColor\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"board_header_title\",\n        children: [props.board.title, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: props.board.cards.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board_body\",\n      children: [!showAddCardForm && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board_add-card-btn\",\n        onClick: () => setShowAddCardForm(true),\n        children: \"+ Add Card\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), showAddCardForm && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board_add-card-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter Card Title\",\n          value: newCardTitle,\n          onChange: e => setNewCardTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"3\",\n          placeholder: \"Enter Card Description\",\n          value: newCardDescription,\n          onChange: e => setNewCardDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"board_add-card-form_actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"primary-btn\",\n            onClick: handleAddCard,\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-btn\",\n            onClick: () => setShowAddCardForm(false),\n            children: \"\\u2715\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: props.board.id,\n        children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `board_cards ${snapshot.isDraggingOver ? \"dragover\" : \"\"}`,\n          ref: provided.innerRef,\n          ...provided.droppableProps,\n          children: [props.board.cards.map((card, index) => /*#__PURE__*/_jsxDEV(Card, {\n            card: card,\n            index: index,\n            boardId: props.board.id,\n            removeCard: props.removeCard,\n            updateCard: props.updateCard,\n            darkTheme: props.darkTheme\n          }, card.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this)), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(Board, \"ZtWBS59BI0mp/hP8U+uFj5m4kdg=\");\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useState","Droppable","Card","jsxDEV","_jsxDEV","Board","props","_s","showAddCardForm","setShowAddCardForm","newCardTitle","setNewCardTitle","newCardDescription","setNewCardDescription","boardHeaderColors","headerColor","board","title","handleAddCard","trim","addCard","id","description","className","darkTheme","children","style","backgroundColor","cards","length","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","value","onChange","e","target","rows","droppableId","provided","snapshot","isDraggingOver","ref","innerRef","droppableProps","map","card","index","boardId","removeCard","updateCard","_c","$RefreshReg$"],"sources":["C:/Users/aleks/Desktop/kanbanapp/kanban-front/src/Components/Board/Board.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Droppable } from \"react-beautiful-dnd\";\nimport Card from \"../Card/Card\";\nimport \"./Board.css\";\n\nfunction Board(props) {\n  const [showAddCardForm, setShowAddCardForm] = useState(false);\n  const [newCardTitle, setNewCardTitle] = useState(\"\");\n  const [newCardDescription, setNewCardDescription] = useState(\"\");\n\n  // Пастельные цвета для заголовков досок (настройте по своему вкусу)\n  const boardHeaderColors = {\n    \"Очередь\": \"#fae9a6\",\n    \"В работе\": \"#c4e2ff\",\n    \"На проверке\": \"#ffd0d0\",\n    \"Готово\": \"#b5f8b8\",\n  };\n\n  // Выбираем цвет для текущей доски\n  const headerColor = boardHeaderColors[props.board.title] || \"#fdfdfd\";\n\n  const handleAddCard = () => {\n    if (!newCardTitle.trim()) return;\n    props.addCard(props.board.id, {\n      title: newCardTitle.trim(),\n      description: newCardDescription.trim(),\n    });\n    setNewCardTitle(\"\");\n    setNewCardDescription(\"\");\n    setShowAddCardForm(false);\n  };\n\n  return (\n    <div className={`board ${props.darkTheme ? \"dark\" : \"\"}`}>\n      <div className=\"board_header\" style={{ backgroundColor: headerColor }}>\n        <p className=\"board_header_title\">\n          {props.board.title} <span>{props.board.cards.length}</span>\n        </p>\n      </div>\n\n      <div className=\"board_body\">\n        {!showAddCardForm && (\n          <div\n            className=\"board_add-card-btn\"\n            onClick={() => setShowAddCardForm(true)}\n          >\n            + Add Card\n          </div>\n        )}\n        {showAddCardForm && (\n          <div className=\"board_add-card-form\">\n            <input\n              type=\"text\"\n              placeholder=\"Enter Card Title\"\n              value={newCardTitle}\n              onChange={(e) => setNewCardTitle(e.target.value)}\n            />\n            <textarea\n              rows=\"3\"\n              placeholder=\"Enter Card Description\"\n              value={newCardDescription}\n              onChange={(e) => setNewCardDescription(e.target.value)}\n            />\n            <div className=\"board_add-card-form_actions\">\n              <button className=\"primary-btn\" onClick={handleAddCard}>\n                Add\n              </button>\n              <button\n                className=\"close-btn\"\n                onClick={() => setShowAddCardForm(false)}\n              >\n                ✕\n              </button>\n            </div>\n          </div>\n        )}\n\n        <Droppable droppableId={props.board.id}>\n          {(provided, snapshot) => (\n            <div\n              className={`board_cards ${\n                snapshot.isDraggingOver ? \"dragover\" : \"\"\n              }`}\n              ref={provided.innerRef}\n              {...provided.droppableProps}\n            >\n              {props.board.cards.map((card, index) => (\n                <Card\n                  key={card.id}\n                  card={card}\n                  index={index}\n                  boardId={props.board.id}\n                  removeCard={props.removeCard}\n                  updateCard={props.updateCard}\n                  darkTheme={props.darkTheme}\n                />\n              ))}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </div>\n    </div>\n  );\n}\n\nexport default Board;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}