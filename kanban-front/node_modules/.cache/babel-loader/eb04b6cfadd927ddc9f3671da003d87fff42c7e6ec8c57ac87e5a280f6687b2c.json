{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aleks\\\\Desktop\\\\kanbanapp\\\\kanban-front\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// 1) Все импорты подряд, без пропусков и кода между ними\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { addTaskToSheet, updateTaskInSheet, deleteTaskFromSheet } from \"./googleSheet\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport { Sun, Moon } from \"lucide-react\";\nimport Board from \"./Components/Board/Board\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.baseURL = \"http://localhost:3001\";\nexport default function App() {\n  _s();\n  const [boards, setBoards] = useState([]);\n  const [darkTheme, setDarkTheme] = useState(localStorage.getItem(\"kanban-theme\") === \"dark\");\n\n  // фильтр/сорт/поиск\n  const [filterStatus, setFilterStatus] = useState(\"all\");\n  const [sortValue, setSortValue] = useState(\"none\");\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [showSortMenu, setShowSortMenu] = useState(false);\n  const [showFilterMenu, setShowFilterMenu] = useState(false);\n  const statuses = [\"Очередь\", \"В работе\", \"На проверке\", \"Готово\"];\n  const sortLabels = {\n    titleAsc: \"Title A→Z\",\n    titleDesc: \"Title Z→A\",\n    dateAsc: \"Date Asc\",\n    dateDesc: \"Date Desc\"\n  };\n\n  // 1) Начальная загрузка: localStorage или API\n  useEffect(() => {\n    const saved = localStorage.getItem(\"kanban-boards\");\n    if (saved) {\n      setBoards(JSON.parse(saved));\n    } else {\n      axios.get(\"/api/board\").then(res => {\n        const tasks = res.data.tasks || [];\n        const grouped = statuses.map((st, i) => ({\n          id: `${i + 1}`,\n          title: st,\n          cards: tasks.filter(t => t.status === st)\n        }));\n        setBoards(grouped);\n      }).catch(err => console.error(\"Ошибка загрузки:\", err));\n    }\n  }, []);\n\n  // 2) Сохраняем тему\n  useEffect(() => {\n    localStorage.setItem(\"kanban-theme\", darkTheme ? \"dark\" : \"light\");\n  }, [darkTheme]);\n\n  // 3) Сохраняем доски в localStorage при любых изменениях\n  useEffect(() => {\n    localStorage.setItem(\"kanban-boards\", JSON.stringify(boards));\n  }, [boards]);\n\n  // фильтрация / поиск / сортировка\n  const applyFilterSearchSort = cards => {\n    let result = [...cards];\n    if (filterStatus !== \"all\") {\n      result = result.filter(c => c.status === filterStatus);\n    }\n    if (searchQuery.trim()) {\n      const q = searchQuery.toLowerCase();\n      result = result.filter(c => c.title.toLowerCase().includes(q));\n    }\n    if (sortValue === \"titleAsc\") {\n      result.sort((a, b) => a.title > b.title ? 1 : -1);\n    } else if (sortValue === \"titleDesc\") {\n      result.sort((a, b) => a.title < b.title ? 1 : -1);\n    } else if (sortValue === \"dateAsc\") {\n      result.sort((a, b) => {\n        if (!a.date) return 1;\n        if (!b.date) return -1;\n        return new Date(a.date) - new Date(b.date);\n      });\n    } else if (sortValue === \"dateDesc\") {\n      result.sort((a, b) => {\n        if (!a.date) return 1;\n        if (!b.date) return -1;\n        return new Date(b.date) - new Date(a.date);\n      });\n    }\n    return result;\n  };\n  const displayedBoards = boards.map(b => ({\n    ...b,\n    cards: applyFilterSearchSort(b.cards)\n  }));\n\n  // меню сортировки / фильтра\n  const handleSortClick = () => {\n    setShowSortMenu(v => !v);\n    setShowFilterMenu(false);\n  };\n  const handleFilterClick = () => {\n    setShowFilterMenu(v => !v);\n    setShowSortMenu(false);\n  };\n  const setSort = val => {\n    setSortValue(val);\n    setShowSortMenu(false);\n  };\n  const setFilter = val => {\n    setFilterStatus(val);\n    setShowFilterMenu(false);\n  };\n\n  // CRUD карточек\n  // … внутри функции App **не** через “кортеж” (`,`), а просто как блок:\n\n  const addCardHandler = (boardId, cardData) => {\n    // 1) обновляем локально\n    setBoards(bs => bs.map(b => b.id === boardId ? {\n      ...b,\n      cards: [...b.cards, {\n        ...cardData,\n        status: b.title\n      }]\n    } : b));\n\n    // 2) сохраняем на наш сервер\n    axios.post(\"/api/addTask\", {\n      card: cardData\n    }).catch(console.error);\n\n    // 3) и пушим в Google Sheets\n    addTaskToSheet({\n      id: cardData.id,\n      title: cardData.title,\n      description: cardData.description,\n      status: cardData.status,\n      startDate: cardData.startDate,\n      dueDate: cardData.dueDate,\n      priority: cardData.priority,\n      labels: cardData.labels\n    }).catch(console.error);\n  };\n  const updateCard = (boardId, cardId, updatedCard) => {\n    setBoards(bs => bs.map(b => b.id === boardId ? {\n      ...b,\n      cards: b.cards.map(c => c.id === cardId ? updatedCard : c)\n    } : b));\n    axios.post(\"/api/editTask\", {\n      card: updatedCard\n    }).catch(console.error);\n    updateTaskInSheet({\n      id: updatedCard.id,\n      title: updatedCard.title,\n      description: updatedCard.description,\n      status: updatedCard.status,\n      startDate: updatedCard.startDate,\n      dueDate: updatedCard.dueDate,\n      priority: updatedCard.priority,\n      labels: updatedCard.labels\n    }).catch(console.error);\n  };\n  const removeCard = (boardId, cardId) => {\n    setBoards(bs => bs.map(b => b.id === boardId ? {\n      ...b,\n      cards: b.cards.filter(c => c.id !== cardId)\n    } : b));\n    axios.post(\"/api/deleteTask\", {\n      id: cardId\n    }).catch(console.error);\n    deleteTaskFromSheet(cardId).catch(console.error);\n  };\n\n  // Drag & Drop\n  const onDragEnd = result => {\n    const {\n      source,\n      destination,\n      draggableId\n    } = result;\n    if (!destination) return;\n    const srcId = source.droppableId;\n    const dstId = destination.droppableId;\n\n    // 1) Перемещение внутри того же столбца — просто ре-порядок\n    if (srcId === dstId) {\n      setBoards(prev => prev.map(b => {\n        if (b.id !== srcId) return b;\n        const cards = Array.from(b.cards);\n        const [movedCard] = cards.splice(source.index, 1);\n        cards.splice(destination.index, 0, movedCard);\n        return {\n          ...b,\n          cards\n        };\n      }));\n      return;\n    }\n\n    // 2) Перемещение в другой столбец — меняем статус и синхронизируем\n    // Извлечём movedCard заранее из текущего стейта\n    const srcBoard = boards.find(b => b.id === srcId);\n    const dstBoard = boards.find(b => b.id === dstId);\n    const srcCards = Array.from(srcBoard.cards);\n    // Удаляем карточку из src\n    const [movedCard] = srcCards.splice(source.index, 1);\n    // Обновляем статус\n    movedCard.status = dstBoard.title;\n    // Вставляем в dst\n    const dstCards = Array.from(dstBoard.cards);\n    dstCards.splice(destination.index, 0, movedCard);\n\n    // 3) Обновляем локальный стейт\n    setBoards(prev => prev.map(b => {\n      if (b.id === srcId) return {\n        ...b,\n        cards: srcCards\n      };\n      if (b.id === dstId) return {\n        ...b,\n        cards: dstCards\n      };\n      return b;\n    }));\n\n    // 4) Сохраняем в своё API (Express)\n    axios.post(\"/api/updateTask\", {\n      id: draggableId,\n      status: movedCard.status // уже текстовый заголовок колонны\n    }).catch(console.error);\n\n    // 5) Пушим обновлённую карточку в Google Sheets\n    updateTaskInSheet({\n      id: movedCard.id,\n      title: movedCard.title,\n      description: movedCard.description,\n      status: movedCard.status,\n      startDate: movedCard.startDate,\n      dueDate: movedCard.dueDate,\n      priority: movedCard.priority,\n      labels: movedCard.labels\n    }).catch(console.error);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `app ${darkTheme ? \"dark\" : \"\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app_nav\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Kanban Board\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"theme-toggle\",\n        onClick: () => setDarkTheme(d => !d),\n        children: darkTheme ? /*#__PURE__*/_jsxDEV(Sun, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 24\n        }, this) : /*#__PURE__*/_jsxDEV(Moon, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-menu\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"menu-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"menu-item\",\n          onClick: handleSortClick,\n          children: [\"Sort \", sortValue !== \"none\" && `(${sortLabels[sortValue]})`, showSortMenu && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropdown-menu\",\n            children: [\"none\", \"titleAsc\", \"titleDesc\", \"dateAsc\", \"dateDesc\"].map(opt => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dropdown-item\",\n              onClick: () => setSort(opt),\n              children: opt === \"none\" ? \"None\" : sortLabels[opt]\n            }, opt, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"menu-item\",\n          onClick: handleFilterClick,\n          children: [\"Filter \", filterStatus !== \"all\" && `(${filterStatus})`, showFilterMenu && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropdown-menu\",\n            children: [\"all\", ...statuses].map(opt => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dropdown-item\",\n              onClick: () => setFilter(opt),\n              children: opt\n            }, opt, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"menu-right\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"search-icon\",\n            width: \"16\",\n            height: \"16\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            strokeWidth: \"2\",\n            viewBox: \"0 0 24 24\",\n            \"aria-hidden\": \"true\",\n            children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n              cx: \"11\",\n              cy: \"11\",\n              r: \"8\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n              x1: \"21\",\n              y1: \"21\",\n              x2: \"16.65\",\n              y2: \"16.65\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"\\u041F\\u043E\\u0438\\u0441\\u043A...\",\n            className: \"search-no-border\",\n            value: searchQuery,\n            onChange: e => setSearchQuery(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app_boards_container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"app_boards\",\n          children: displayedBoards.map(board => /*#__PURE__*/_jsxDEV(Board, {\n            board: board,\n            addCard: addCardHandler,\n            updateCard: updateCard,\n            removeCard: removeCard,\n            darkTheme: darkTheme\n          }, board.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 258,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"9uavONRhz1gm0X/4tHRfq2TnwYs=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","addTaskToSheet","updateTaskInSheet","deleteTaskFromSheet","DragDropContext","Sun","Moon","Board","jsxDEV","_jsxDEV","defaults","baseURL","App","_s","boards","setBoards","darkTheme","setDarkTheme","localStorage","getItem","filterStatus","setFilterStatus","sortValue","setSortValue","searchQuery","setSearchQuery","showSortMenu","setShowSortMenu","showFilterMenu","setShowFilterMenu","statuses","sortLabels","titleAsc","titleDesc","dateAsc","dateDesc","saved","JSON","parse","get","then","res","tasks","data","grouped","map","st","i","id","title","cards","filter","t","status","catch","err","console","error","setItem","stringify","applyFilterSearchSort","result","c","trim","q","toLowerCase","includes","sort","a","b","date","Date","displayedBoards","handleSortClick","v","handleFilterClick","setSort","val","setFilter","addCardHandler","boardId","cardData","bs","post","card","description","startDate","dueDate","priority","labels","updateCard","cardId","updatedCard","removeCard","onDragEnd","source","destination","draggableId","srcId","droppableId","dstId","prev","Array","from","movedCard","splice","index","srcBoard","find","dstBoard","srcCards","dstCards","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","d","size","opt","width","height","fill","stroke","strokeWidth","viewBox","cx","cy","r","x1","y1","x2","y2","type","placeholder","value","onChange","e","target","board","addCard","_c","$RefreshReg$"],"sources":["C:/Users/aleks/Desktop/kanbanapp/kanban-front/src/App.js"],"sourcesContent":["// 1) Все импорты подряд, без пропусков и кода между ними\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport {\n  addTaskToSheet,\n  updateTaskInSheet,\n  deleteTaskFromSheet\n} from \"./googleSheet\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport { Sun, Moon } from \"lucide-react\";\nimport Board from \"./Components/Board/Board\";\nimport \"./App.css\";\n\naxios.defaults.baseURL = \"http://localhost:3001\";\n\nexport default function App() {\n  const [boards, setBoards] = useState([]);\n  const [darkTheme, setDarkTheme] = useState(\n    localStorage.getItem(\"kanban-theme\") === \"dark\"\n  );\n\n  // фильтр/сорт/поиск\n  const [filterStatus, setFilterStatus] = useState(\"all\");\n  const [sortValue, setSortValue] = useState(\"none\");\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [showSortMenu, setShowSortMenu] = useState(false);\n  const [showFilterMenu, setShowFilterMenu] = useState(false);\n\n  const statuses = [\"Очередь\", \"В работе\", \"На проверке\", \"Готово\"];\n  const sortLabels = {\n    titleAsc: \"Title A→Z\",\n    titleDesc: \"Title Z→A\",\n    dateAsc: \"Date Asc\",\n    dateDesc: \"Date Desc\",\n  };\n\n  // 1) Начальная загрузка: localStorage или API\n  useEffect(() => {\n    const saved = localStorage.getItem(\"kanban-boards\");\n    if (saved) {\n      setBoards(JSON.parse(saved));\n    } else {\n      axios\n        .get(\"/api/board\")\n        .then((res) => {\n          const tasks = res.data.tasks || [];\n          const grouped = statuses.map((st, i) => ({\n            id: `${i + 1}`,\n            title: st,\n            cards: tasks.filter((t) => t.status === st),\n          }));\n          setBoards(grouped);\n        })\n        .catch((err) => console.error(\"Ошибка загрузки:\", err));\n    }\n  }, []);\n\n  // 2) Сохраняем тему\n  useEffect(() => {\n    localStorage.setItem(\"kanban-theme\", darkTheme ? \"dark\" : \"light\");\n  }, [darkTheme]);\n\n  // 3) Сохраняем доски в localStorage при любых изменениях\n  useEffect(() => {\n    localStorage.setItem(\"kanban-boards\", JSON.stringify(boards));\n  }, [boards]);\n\n  // фильтрация / поиск / сортировка\n  const applyFilterSearchSort = (cards) => {\n    let result = [...cards];\n    if (filterStatus !== \"all\") {\n      result = result.filter((c) => c.status === filterStatus);\n    }\n    if (searchQuery.trim()) {\n      const q = searchQuery.toLowerCase();\n      result = result.filter((c) =>\n        c.title.toLowerCase().includes(q)\n      );\n    }\n    if (sortValue === \"titleAsc\") {\n      result.sort((a, b) => (a.title > b.title ? 1 : -1));\n    } else if (sortValue === \"titleDesc\") {\n      result.sort((a, b) => (a.title < b.title ? 1 : -1));\n    } else if (sortValue === \"dateAsc\") {\n      result.sort((a, b) => {\n        if (!a.date) return 1;\n        if (!b.date) return -1;\n        return new Date(a.date) - new Date(b.date);\n      });\n    } else if (sortValue === \"dateDesc\") {\n      result.sort((a, b) => {\n        if (!a.date) return 1;\n        if (!b.date) return -1;\n        return new Date(b.date) - new Date(a.date);\n      });\n    }\n    return result;\n  };\n\n  const displayedBoards = boards.map((b) => ({\n    ...b,\n    cards: applyFilterSearchSort(b.cards),\n  }));\n\n  // меню сортировки / фильтра\n  const handleSortClick = () => {\n    setShowSortMenu((v) => !v);\n    setShowFilterMenu(false);\n  };\n  const handleFilterClick = () => {\n    setShowFilterMenu((v) => !v);\n    setShowSortMenu(false);\n  };\n  const setSort = (val) => {\n    setSortValue(val);\n    setShowSortMenu(false);\n  };\n  const setFilter = (val) => {\n    setFilterStatus(val);\n    setShowFilterMenu(false);\n  };\n\n  // CRUD карточек\n  // … внутри функции App **не** через “кортеж” (`,`), а просто как блок:\n\nconst addCardHandler = (boardId, cardData) => {\n  // 1) обновляем локально\n  setBoards(bs =>\n    bs.map(b =>\n      b.id === boardId\n        ? { ...b, cards: [...b.cards, { ...cardData, status: b.title }] }\n        : b\n    )\n  );\n\n  // 2) сохраняем на наш сервер\n  axios.post(\"/api/addTask\", { card: cardData }).catch(console.error);\n\n  // 3) и пушим в Google Sheets\n  addTaskToSheet({\n    id:          cardData.id,\n    title:       cardData.title,\n    description: cardData.description,\n    status:      cardData.status,\n    startDate:   cardData.startDate,\n    dueDate:     cardData.dueDate,\n    priority:    cardData.priority,\n    labels:      cardData.labels\n  }).catch(console.error);\n};\n\nconst updateCard = (boardId, cardId, updatedCard) => {\n  setBoards(bs =>\n    bs.map(b =>\n      b.id === boardId\n        ? {\n            ...b,\n            cards: b.cards.map(c =>\n              c.id === cardId ? updatedCard : c\n            )\n          }\n        : b\n    )\n  );\n  axios.post(\"/api/editTask\", { card: updatedCard }).catch(console.error);\n  updateTaskInSheet({\n    id:          updatedCard.id,\n    title:       updatedCard.title,\n    description: updatedCard.description,\n    status:      updatedCard.status,\n    startDate:   updatedCard.startDate,\n    dueDate:     updatedCard.dueDate,\n    priority:    updatedCard.priority,\n    labels:      updatedCard.labels\n  }).catch(console.error);\n};\n\nconst removeCard = (boardId, cardId) => {\n  setBoards(bs =>\n    bs.map(b =>\n      b.id === boardId\n        ? { ...b, cards: b.cards.filter(c => c.id !== cardId) }\n        : b\n    )\n  );\n  axios.post(\"/api/deleteTask\", { id: cardId }).catch(console.error);\n  deleteTaskFromSheet(cardId).catch(console.error);\n};\n\n\n  // Drag & Drop\n  const onDragEnd = (result) => {\n  const { source, destination, draggableId } = result;\n  if (!destination) return;\n\n  const srcId = source.droppableId;\n  const dstId = destination.droppableId;\n\n  // 1) Перемещение внутри того же столбца — просто ре-порядок\n  if (srcId === dstId) {\n    setBoards((prev) =>\n      prev.map((b) => {\n        if (b.id !== srcId) return b;\n        const cards = Array.from(b.cards);\n        const [movedCard] = cards.splice(source.index, 1);\n        cards.splice(destination.index, 0, movedCard);\n        return { ...b, cards };\n      })\n    );\n    return;\n  }\n\n  // 2) Перемещение в другой столбец — меняем статус и синхронизируем\n  // Извлечём movedCard заранее из текущего стейта\n  const srcBoard = boards.find((b) => b.id === srcId);\n  const dstBoard = boards.find((b) => b.id === dstId);\n  const srcCards = Array.from(srcBoard.cards);\n  // Удаляем карточку из src\n  const [movedCard] = srcCards.splice(source.index, 1);\n  // Обновляем статус\n  movedCard.status = dstBoard.title;\n  // Вставляем в dst\n  const dstCards = Array.from(dstBoard.cards);\n  dstCards.splice(destination.index, 0, movedCard);\n\n  // 3) Обновляем локальный стейт\n  setBoards((prev) =>\n    prev.map((b) => {\n      if (b.id === srcId) return { ...b, cards: srcCards };\n      if (b.id === dstId) return { ...b, cards: dstCards };\n      return b;\n    })\n  );\n\n  // 4) Сохраняем в своё API (Express)\n  axios\n    .post(\"/api/updateTask\", {\n      id: draggableId,\n      status: movedCard.status, // уже текстовый заголовок колонны\n    })\n    .catch(console.error);\n\n  // 5) Пушим обновлённую карточку в Google Sheets\n  updateTaskInSheet({\n    id:          movedCard.id,\n    title:       movedCard.title,\n    description: movedCard.description,\n    status:      movedCard.status,\n    startDate:   movedCard.startDate,\n    dueDate:     movedCard.dueDate,\n    priority:    movedCard.priority,\n    labels:      movedCard.labels,\n  }).catch(console.error);\n};\n\n\n  return (\n    <div className={`app ${darkTheme ? \"dark\" : \"\"}`}>\n      <div className=\"app_nav\">\n        <h1>Kanban Board</h1>\n        <div\n          className=\"theme-toggle\"\n          onClick={() => setDarkTheme((d) => !d)}\n        >\n          {darkTheme ? <Sun size={20} /> : <Moon size={20} />}\n        </div>\n      </div>\n\n      <div className=\"board-menu\">\n        <div className=\"menu-left\">\n          <div className=\"menu-item\" onClick={handleSortClick}>\n            Sort {sortValue !== \"none\" && `(${sortLabels[sortValue]})`}\n            {showSortMenu && (\n              <div className=\"dropdown-menu\">\n                {[\n                  \"none\",\n                  \"titleAsc\",\n                  \"titleDesc\",\n                  \"dateAsc\",\n                  \"dateDesc\",\n                ].map((opt) => (\n                  <div\n                    key={opt}\n                    className=\"dropdown-item\"\n                    onClick={() => setSort(opt)}\n                  >\n                    {opt === \"none\" ? \"None\" : sortLabels[opt]}\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n          <div className=\"menu-item\" onClick={handleFilterClick}>\n            Filter {filterStatus !== \"all\" && `(${filterStatus})`}\n            {showFilterMenu && (\n              <div className=\"dropdown-menu\">\n                {[\"all\", ...statuses].map((opt) => (\n                  <div\n                    key={opt}\n                    className=\"dropdown-item\"\n                    onClick={() => setFilter(opt)}\n                  >\n                    {opt}\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        </div>\n        <div className=\"menu-right\">\n          <div className=\"search-container\">\n            <svg\n              className=\"search-icon\"\n              width=\"16\"\n              height=\"16\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeWidth=\"2\"\n              viewBox=\"0 0 24 24\"\n              aria-hidden=\"true\"\n            >\n              <circle cx=\"11\" cy=\"11\" r=\"8\" />\n              <line x1=\"21\" y1=\"21\" x2=\"16.65\" y2=\"16.65\" />\n            </svg>\n            <input\n              type=\"text\"\n              placeholder=\"Поиск...\"\n              className=\"search-no-border\"\n              value={searchQuery}\n              onChange={(e) => setSearchQuery(e.target.value)}\n            />\n          </div>\n        </div>\n      </div>\n\n      <DragDropContext onDragEnd={onDragEnd}>\n        <div className=\"app_boards_container\">\n          <div className=\"app_boards\">\n            {displayedBoards.map((board) => (\n              <Board\n                key={board.id}\n                board={board}\n                addCard={addCardHandler}\n                updateCard={updateCard}\n                removeCard={removeCard}\n                darkTheme={darkTheme}\n              />\n            ))}\n          </div>\n        </div>\n      </DragDropContext>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}